pipeline {
    agent { label 'docker-agent' }

    environment {
        SONAR_HOST_URL = 'http://sonarqube:9000'
        SONAR_TOKEN = credentials('sonar-token')
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
                script {
                    BRANCH_NAME = env.GIT_BRANCH?.replaceFirst(/^origin\//, '') ?: 'main'
                    echo "Detected branch: ${BRANCH_NAME}"
                }
            }
        }

        stage('Detect .go changes compared to main') {
            steps {
                script {
                    sh 'git fetch origin main'
                    def changedFiles = sh(
                        script: "git diff --name-only origin/main...HEAD | grep '\\.go$' || true",
                        returnStdout: true
                    ).trim()
                    writeFile file: 'changed-go-files.txt', text: changedFiles
                    echo "Detected changed .go files:\n${changedFiles}"
                }
            }
        }

        stage('SonarQube Analysis') {
            when {
                expression {
                    return fileExists('changed-go-files.txt') && readFile('changed-go-files.txt').trim()
                }
            }
            steps {
                withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                    sh '''
                        export JAVA_CMD=$(which java)

                        sonar-scanner \
                          -Dsonar.projectKey=gitea \
                          -Dsonar.sources=. \
                          -Dsonar.host.url=$SONAR_HOST_URL \
                          -Dsonar.login=$SONAR_TOKEN \
                          -Dsonar.inclusions=$(cat changed-go-files.txt | tr '\\n' ',' | sed 's/,\$//')
                    '''
                }
            }
        }

        stage('Archive Sonar Report') {
            when {
                expression {
                    currentBuild.currentResult == 'SUCCESS'
                }
            }
            steps {
                archiveArtifacts artifacts: '**/sonar-report.json', onlyIfSuccessful: true
            }
        }
    }

    post {
        failure {
            echo "[Gitea] do not publish assets due to build being non-Successfully"
        }
    }
}

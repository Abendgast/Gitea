pipeline {
  agent {
    label 'docker-agent'
  }

  environment {
    SONAR_HOST_URL = 'http://sonarqube:9000'
  }

  options {
    skipDefaultCheckout true
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Detect .go changes on dev') {
      steps {
        script {
          def branch = sh(script: 'git rev-parse --abbrev-ref HEAD', returnStdout: true).trim()
          echo "Running on branch: ${branch}"

          if (branch == "dev") {
            env.ON_DEV_BRANCH = "true"

            def changed = sh(script: '''
              git fetch origin main
              git diff --name-only origin/main...HEAD | grep '\\.go$' || true
            ''', returnStdout: true).trim()

            if (changed) {
              writeFile file: 'changed-go-files.txt', text: changed
              echo "Changed .go files:\n${changed}"
              env.HAS_GO_CHANGES = "true"
            } else {
              echo "No .go files changed."
              env.HAS_GO_CHANGES = "false"
            }
          } else {
            echo "Not on dev branch. Skipping analysis."
            env.ON_DEV_BRANCH = "false"
          }
        }
      }
    }

    stage('SonarQube Analysis') {
      when {
        expression {
          return env.ON_DEV_BRANCH == "true" && env.HAS_GO_CHANGES == "true"
        }
      }
      environment {
        SONAR_SCANNER_OPTS = "-Xmx512m"
      }
      steps {
        withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
          sh '''
            sonar-scanner \
              -Dsonar.projectKey=gitea \
              -Dsonar.sources=. \
              -Dsonar.host.url=$SONAR_HOST_URL \
              -Dsonar.login=$SONAR_TOKEN \
              -Dsonar.inclusions=$(cat changed-go-files.txt | tr '\\n' ',' | sed 's/,\$//')
          '''
        }
      }
    }

    stage('Archive Sonar Report') {
      steps {
        sh '''
          mkdir -p artifacts
          if [ -f .scannerwork/report-task.txt ]; then
            cp .scannerwork/report-task.txt artifacts/
          else
            echo 'No report generated.' > artifacts/no-report.txt
          fi
        '''
        archiveArtifacts artifacts: 'artifacts/**', fingerprint: true
      }
    }
  }
}

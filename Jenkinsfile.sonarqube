pipeline {
    agent {
        label 'docker-agent'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    extensions: [
                        [$class: 'CloneOption', shallow: true, depth: 1],
                        [$class: 'SparseCheckoutPaths', sparseCheckoutPaths: [
                            [$class: 'SparseCheckoutPath', path: 'docker-compose.yml'],
                            [$class: 'SparseCheckoutPath', path: 'Makefile'],
                            [$class: 'SparseCheckoutPath', path: 'jenkins-agent/'],
                            [$class: 'SparseCheckoutPath', path: 'nginx/'],
                            [$class: 'SparseCheckoutPath', path: 'otel-collector/'],
                            [$class: 'SparseCheckoutPath', path: 'splunk/'],
                            [$class: 'SparseCheckoutPath', path: 'gitea/']
                        ]]
                    ],
                    userRemoteConfigs: [[url: 'http://gitea:3000/gitea/gitea.git']]
                ])
            }
        }

        stage('SonarQube') {
            steps {
                withCredentials([string(credentialsId: 'sonar-token', variable: 'SONAR_TOKEN')]) {
                    sh """
                        /opt/sonar-scanner/bin/sonar-scanner \
                            -Dsonar.projectKey=devops-infra \
                            -Dsonar.sources=. \
                            -Dsonar.host.url=http://sonarqube:9000 \
                            -Dsonar.login=\${SONAR_TOKEN} \
                            -Dsonar.exclusions='**/repos/**,**/data/**,**/logs/**'
                    """
                }
            }
        }

        stage('Quality Gate') {
            steps {
                waitForQualityGate abortPipeline: true
            }
        }
    }
}
